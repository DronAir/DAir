.code
  PUSH 80			contract DronairToken is Crowd...
  PUSH 40			contract DronairToken is Crowd...
  MSTORE 			contract DronairToken is Crowd...
  PUSH 0			0
  PUSH 3			uint256 public tokensSold = 0
  SSTORE 			uint256 public tokensSold = 0
  PUSH 0			0
  PUSH 4			uint256 public remainingTokens...
  SSTORE 			uint256 public remainingTokens...
  CALLER 			msg.sender
  PUSH 5			owner
  PUSH 0			owner
  PUSH 100			owner = msg.sender
  EXP 			owner = msg.sender
  DUP2 			owner = msg.sender
  SLOAD 			owner = msg.sender
  DUP2 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  MUL 			owner = msg.sender
  NOT 			owner = msg.sender
  AND 			owner = msg.sender
  SWAP1 			owner = msg.sender
  DUP4 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  AND 			owner = msg.sender
  MUL 			owner = msg.sender
  OR 			owner = msg.sender
  SWAP1 			owner = msg.sender
  SSTORE 			owner = msg.sender
  POP 			owner = msg.sender
  PUSH 0			Stages.none
  PUSH 5			currentStage
  PUSH 14			currentStage
  PUSH 100			currentStage = Stages.none
  EXP 			currentStage = Stages.none
  DUP2 			currentStage = Stages.none
  SLOAD 			currentStage = Stages.none
  DUP2 			currentStage = Stages.none
  PUSH FF			currentStage = Stages.none
  MUL 			currentStage = Stages.none
  NOT 			currentStage = Stages.none
  AND 			currentStage = Stages.none
  SWAP1 			currentStage = Stages.none
  DUP4 			currentStage = Stages.none
  PUSH 2			currentStage = Stages.none
  DUP2 			currentStage = Stages.none
  GT 			currentStage = Stages.none
  ISZERO 			currentStage = Stages.none
  PUSH [tag] 5			currentStage = Stages.none
  JUMPI 			currentStage = Stages.none
  INVALID 			currentStage = Stages.none
tag 5			currentStage = Stages.none
  JUMPDEST 			currentStage = Stages.none
  MUL 			currentStage = Stages.none
  OR 			currentStage = Stages.none
  SWAP1 			currentStage = Stages.none
  SSTORE 			currentStage = Stages.none
  POP 			currentStage = Stages.none
  PUSH [tag] 6			balances[owner].add(tokenReser...
  PUSH 10F6B2BE4706A13FC20000000			84*10**27
  PUSH 0			balances
  DUP1 			balances[owner]
  PUSH 5			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  SWAP1 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  PUSH 0			balances[owner]
  KECCAK256 			balances[owner]
  SLOAD 			balances[owner]
  PUSH [tag] 7			balances[owner].add
  PUSH 100000000			balances[owner].add
  MUL 			balances[owner].add
  PUSH [tag] 18446744073709551650			balances[owner].add
  OR 			balances[owner].add
  SWAP1 			balances[owner].add
  SWAP2 			balances[owner].add(tokenReser...
  SWAP1 			balances[owner].add(tokenReser...
  PUSH 100000000			balances[owner].add(tokenReser...
  SWAP1 			balances[owner].add(tokenReser...
  DIV 			balances[owner].add(tokenReser...
  JUMP [in]			balances[owner].add(tokenReser...
tag 6			balances[owner].add(tokenReser...
  JUMPDEST 			balances[owner].add(tokenReser...
  PUSH 0			balances
  DUP1 			balances[owner]
  PUSH 5			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  SWAP1 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  PUSH 0			balances[owner]
  KECCAK256 			balances[owner]
  DUP2 			balances[owner] = balances[own...
  SWAP1 			balances[owner] = balances[own...
  SSTORE 			balances[owner] = balances[own...
  POP 			balances[owner] = balances[own...
  PUSH [tag] 8			totalSupply_.add(tokenReserve)
  PUSH 10F6B2BE4706A13FC20000000			84*10**27
  PUSH 1			totalSupply_
  SLOAD 			totalSupply_
  PUSH [tag] 7			totalSupply_.add
  PUSH 100000000			totalSupply_.add
  MUL 			totalSupply_.add
  PUSH [tag] 18446744073709551650			totalSupply_.add
  OR 			totalSupply_.add
  SWAP1 			totalSupply_.add
  SWAP2 			totalSupply_.add(tokenReserve)
  SWAP1 			totalSupply_.add(tokenReserve)
  PUSH 100000000			totalSupply_.add(tokenReserve)
  SWAP1 			totalSupply_.add(tokenReserve)
  DIV 			totalSupply_.add(tokenReserve)
  JUMP [in]			totalSupply_.add(tokenReserve)
tag 8			totalSupply_.add(tokenReserve)
  JUMPDEST 			totalSupply_.add(tokenReserve)
  PUSH 1			totalSupply_
  DUP2 			totalSupply_ = totalSupply_.ad...
  SWAP1 			totalSupply_ = totalSupply_.ad...
  SSTORE 			totalSupply_ = totalSupply_.ad...
  POP 			totalSupply_ = totalSupply_.ad...
  PUSH B4F21D42F59C0D52C0000000			56*10**27
  PUSH 4			remainingTokens
  DUP2 			remainingTokens = cap
  SWAP1 			remainingTokens = cap
  SSTORE 			remainingTokens = cap
  POP 			remainingTokens = cap
  PUSH 5			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), owner,...
  AND 			Transfer(address(this), owner,...
  ADDRESS 			this
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), owner,...
  AND 			Transfer(address(this), owner,...
  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(this), owner,...
  PUSH 10F6B2BE4706A13FC20000000			84*10**27
  PUSH 40			Transfer(address(this), owner,...
  MLOAD 			Transfer(address(this), owner,...
  DUP1 			Transfer(address(this), owner,...
  DUP3 			Transfer(address(this), owner,...
  DUP2 			Transfer(address(this), owner,...
  MSTORE 			Transfer(address(this), owner,...
  PUSH 20			Transfer(address(this), owner,...
  ADD 			Transfer(address(this), owner,...
  SWAP2 			Transfer(address(this), owner,...
  POP 			Transfer(address(this), owner,...
  POP 			Transfer(address(this), owner,...
  PUSH 40			Transfer(address(this), owner,...
  MLOAD 			Transfer(address(this), owner,...
  DUP1 			Transfer(address(this), owner,...
  SWAP2 			Transfer(address(this), owner,...
  SUB 			Transfer(address(this), owner,...
  SWAP1 			Transfer(address(this), owner,...
  LOG3 			Transfer(address(this), owner,...
  PUSH [tag] 9			contract DronairToken is Crowd...
  JUMP 			contract DronairToken is Crowd...
tag 7			function add(uint256 a, uint25...
  JUMPDEST 			function add(uint256 a, uint25...
  PUSH 0			uint256 c
  DUP2 			b
  DUP4 			a
  ADD 			a + b
  SWAP1 			c = a + b
  POP 			c = a + b
  DUP3 			a
  DUP2 			c
  LT 			c >= a
  ISZERO 			c >= a
  ISZERO 			assert(c >= a)
  ISZERO 			assert(c >= a)
  PUSH [tag] 11			assert(c >= a)
  JUMPI 			assert(c >= a)
  INVALID 			assert(c >= a)
tag 11			assert(c >= a)
  JUMPDEST 			assert(c >= a)
  DUP1 			c
  SWAP1 			return c
  POP 			return c
  SWAP3 			function add(uint256 a, uint25...
  SWAP2 			function add(uint256 a, uint25...
  POP 			function add(uint256 a, uint25...
  POP 			function add(uint256 a, uint25...
  JUMP [out]			function add(uint256 a, uint25...
tag 9			contract DronairToken is Crowd...
  JUMPDEST 			contract DronairToken is Crowd...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract DronairToken is Crowd...
  DUP1 			contract DronairToken is Crowd...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract DronairToken is Crowd...
  PUSH 0			contract DronairToken is Crowd...
  CODECOPY 			contract DronairToken is Crowd...
  PUSH 0			contract DronairToken is Crowd...
  RETURN 			contract DronairToken is Crowd...
.data
  0:
    .code
      PUSH 80			contract DronairToken is Crowd...
      PUSH 40			contract DronairToken is Crowd...
      MSTORE 			contract DronairToken is Crowd...
      PUSH 4			contract DronairToken is Crowd...
      CALLDATASIZE 			contract DronairToken is Crowd...
      LT 			contract DronairToken is Crowd...
      PUSH [tag] 1			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      PUSH 0			contract DronairToken is Crowd...
      CALLDATALOAD 			contract DronairToken is Crowd...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract DronairToken is Crowd...
      SWAP1 			contract DronairToken is Crowd...
      DIV 			contract DronairToken is Crowd...
      PUSH FFFFFFFF			contract DronairToken is Crowd...
      AND 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 6FDDE03			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 2			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 95EA7B3			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 3			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 18160DDD			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 4			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 23B872DD			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 5			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 313CE567			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 6			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 355274EA			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 7			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 518AB2A8			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 8			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 66188463			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 9			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 70A08231			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 10			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 89311E6F			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 11			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 8DA5CB5B			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 12			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 903A3EF6			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 13			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH 95D89B41			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 14			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH A9059CBB			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 15			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH BF583903			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 16			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH C7876EA4			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 17			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH CBCB3171			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 18			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH D73DD623			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 19			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH DD62ED3E			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 20			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
      DUP1 			contract DronairToken is Crowd...
      PUSH F2FDE38B			contract DronairToken is Crowd...
      EQ 			contract DronairToken is Crowd...
      PUSH [tag] 21			contract DronairToken is Crowd...
      JUMPI 			contract DronairToken is Crowd...
    tag 1			contract DronairToken is Crowd...
      JUMPDEST 			contract DronairToken is Crowd...
      PUSH 0			uint256 weiAmount
      DUP1 			uint256 tokens
      PUSH 0			uint256 returnWei
      DUP1 			uint256 newTokens
      PUSH 0			uint256 newWei
      PUSH 1			Stages.icoStart
      PUSH 2			currentStage == Stages.icoStar...
      DUP2 			currentStage == Stages.icoStar...
      GT 			currentStage == Stages.icoStar...
      ISZERO 			currentStage == Stages.icoStar...
      PUSH [tag] 24			currentStage == Stages.icoStar...
      JUMPI 			currentStage == Stages.icoStar...
      INVALID 			currentStage == Stages.icoStar...
    tag 24			currentStage == Stages.icoStar...
      JUMPDEST 			currentStage == Stages.icoStar...
      PUSH 5			currentStage
      PUSH 14			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 2			currentStage == Stages.icoStar...
      DUP2 			currentStage == Stages.icoStar...
      GT 			currentStage == Stages.icoStar...
      ISZERO 			currentStage == Stages.icoStar...
      PUSH [tag] 25			currentStage == Stages.icoStar...
      JUMPI 			currentStage == Stages.icoStar...
      INVALID 			currentStage == Stages.icoStar...
    tag 25			currentStage == Stages.icoStar...
      JUMPDEST 			currentStage == Stages.icoStar...
      EQ 			currentStage == Stages.icoStar...
      ISZERO 			require(currentStage == Stages...
      ISZERO 			require(currentStage == Stages...
      PUSH [tag] 26			require(currentStage == Stages...
      JUMPI 			require(currentStage == Stages...
      PUSH 0			require(currentStage == Stages...
      DUP1 			require(currentStage == Stages...
      REVERT 			require(currentStage == Stages...
    tag 26			require(currentStage == Stages...
      JUMPDEST 			require(currentStage == Stages...
      PUSH 0			0
      CALLVALUE 			msg.value
      GT 			msg.value > 0
      ISZERO 			require(msg.value > 0)
      ISZERO 			require(msg.value > 0)
      PUSH [tag] 27			require(msg.value > 0)
      JUMPI 			require(msg.value > 0)
      PUSH 0			require(msg.value > 0)
      DUP1 			require(msg.value > 0)
      REVERT 			require(msg.value > 0)
    tag 27			require(msg.value > 0)
      JUMPDEST 			require(msg.value > 0)
      PUSH 0			0
      PUSH 4			remainingTokens
      SLOAD 			remainingTokens
      GT 			remainingTokens > 0
      ISZERO 			require(remainingTokens > 0)
      ISZERO 			require(remainingTokens > 0)
      PUSH [tag] 28			require(remainingTokens > 0)
      JUMPI 			require(remainingTokens > 0)
      PUSH 0			require(remainingTokens > 0)
      DUP1 			require(remainingTokens > 0)
      REVERT 			require(remainingTokens > 0)
    tag 28			require(remainingTokens > 0)
      JUMPDEST 			require(remainingTokens > 0)
      CALLVALUE 			msg.value
      SWAP5 			uint256 weiAmount = msg.value
      POP 			uint256 weiAmount = msg.value
      PUSH [tag] 29			weiAmount.mul(basePrice).div(1...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 30			weiAmount.mul(basePrice)
      PUSH 2A9DC8CBDBCD434800000			322*10**22
      DUP9 			weiAmount
      PUSH [tag] 31			weiAmount.mul
      SWAP1 			weiAmount.mul
      SWAP2 			weiAmount.mul(basePrice)
      SWAP1 			weiAmount.mul(basePrice)
      PUSH FFFFFFFF			weiAmount.mul(basePrice)
      AND 			weiAmount.mul(basePrice)
      JUMP [in]			weiAmount.mul(basePrice)
    tag 30			weiAmount.mul(basePrice)
      JUMPDEST 			weiAmount.mul(basePrice)
      PUSH [tag] 32			weiAmount.mul(basePrice).div
      SWAP1 			weiAmount.mul(basePrice).div
      SWAP2 			weiAmount.mul(basePrice).div(1...
      SWAP1 			weiAmount.mul(basePrice).div(1...
      PUSH FFFFFFFF			weiAmount.mul(basePrice).div(1...
      AND 			weiAmount.mul(basePrice).div(1...
      JUMP [in]			weiAmount.mul(basePrice).div(1...
    tag 29			weiAmount.mul(basePrice).div(1...
      JUMPDEST 			weiAmount.mul(basePrice).div(1...
      SWAP4 			uint256 tokens = weiAmount.mul...
      POP 			uint256 tokens = weiAmount.mul...
      PUSH 0			0
      SWAP3 			uint256 returnWei = 0
      POP 			uint256 returnWei = 0
      PUSH B4F21D42F59C0D52C0000000			56*10**27
      PUSH [tag] 33			tokensSold.add(tokens)
      DUP6 			tokens
      PUSH 3			tokensSold
      SLOAD 			tokensSold
      PUSH [tag] 34			tokensSold.add
      SWAP1 			tokensSold.add
      SWAP2 			tokensSold.add(tokens)
      SWAP1 			tokensSold.add(tokens)
      PUSH FFFFFFFF			tokensSold.add(tokens)
      AND 			tokensSold.add(tokens)
      JUMP [in]			tokensSold.add(tokens)
    tag 33			tokensSold.add(tokens)
      JUMPDEST 			tokensSold.add(tokens)
      GT 			tokensSold.add(tokens) > cap
      ISZERO 			if(tokensSold.add(tokens) > ca...
      PUSH [tag] 35			if(tokensSold.add(tokens) > ca...
      JUMPI 			if(tokensSold.add(tokens) > ca...
      PUSH [tag] 36			cap.sub(tokensSold)
      PUSH 3			tokensSold
      SLOAD 			tokensSold
      PUSH B4F21D42F59C0D52C0000000			56*10**27
      PUSH [tag] 37			cap.sub
      SWAP1 			cap.sub
      SWAP2 			cap.sub(tokensSold)
      SWAP1 			cap.sub(tokensSold)
      PUSH FFFFFFFF			cap.sub(tokensSold)
      AND 			cap.sub(tokensSold)
      JUMP [in]			cap.sub(tokensSold)
    tag 36			cap.sub(tokensSold)
      JUMPDEST 			cap.sub(tokensSold)
      SWAP2 			uint256 newTokens = cap.sub(to...
      POP 			uint256 newTokens = cap.sub(to...
      PUSH [tag] 38			newTokens.div(basePrice).mul(1...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 39			newTokens.div(basePrice)
      PUSH 2A9DC8CBDBCD434800000			322*10**22
      DUP6 			newTokens
      PUSH [tag] 32			newTokens.div
      SWAP1 			newTokens.div
      SWAP2 			newTokens.div(basePrice)
      SWAP1 			newTokens.div(basePrice)
      PUSH FFFFFFFF			newTokens.div(basePrice)
      AND 			newTokens.div(basePrice)
      JUMP [in]			newTokens.div(basePrice)
    tag 39			newTokens.div(basePrice)
      JUMPDEST 			newTokens.div(basePrice)
      PUSH [tag] 31			newTokens.div(basePrice).mul
      SWAP1 			newTokens.div(basePrice).mul
      SWAP2 			newTokens.div(basePrice).mul(1...
      SWAP1 			newTokens.div(basePrice).mul(1...
      PUSH FFFFFFFF			newTokens.div(basePrice).mul(1...
      AND 			newTokens.div(basePrice).mul(1...
      JUMP [in]			newTokens.div(basePrice).mul(1...
    tag 38			newTokens.div(basePrice).mul(1...
      JUMPDEST 			newTokens.div(basePrice).mul(1...
      SWAP1 			uint256 newWei = newTokens.div...
      POP 			uint256 newWei = newTokens.div...
      PUSH [tag] 40			weiAmount.sub(newWei)
      DUP2 			newWei
      DUP7 			weiAmount
      PUSH [tag] 37			weiAmount.sub
      SWAP1 			weiAmount.sub
      SWAP2 			weiAmount.sub(newWei)
      SWAP1 			weiAmount.sub(newWei)
      PUSH FFFFFFFF			weiAmount.sub(newWei)
      AND 			weiAmount.sub(newWei)
      JUMP [in]			weiAmount.sub(newWei)
    tag 40			weiAmount.sub(newWei)
      JUMPDEST 			weiAmount.sub(newWei)
      SWAP3 			returnWei = weiAmount.sub(newW...
      POP 			returnWei = weiAmount.sub(newW...
      DUP1 			newWei
      SWAP5 			weiAmount = newWei
      POP 			weiAmount = newWei
      DUP2 			newTokens
      SWAP4 			tokens = newTokens
      POP 			tokens = newTokens
    tag 35			if(tokensSold.add(tokens) > ca...
      JUMPDEST 			if(tokensSold.add(tokens) > ca...
      PUSH [tag] 41			tokensSold.add(tokens)
      DUP5 			tokens
      PUSH 3			tokensSold
      SLOAD 			tokensSold
      PUSH [tag] 34			tokensSold.add
      SWAP1 			tokensSold.add
      SWAP2 			tokensSold.add(tokens)
      SWAP1 			tokensSold.add(tokens)
      PUSH FFFFFFFF			tokensSold.add(tokens)
      AND 			tokensSold.add(tokens)
      JUMP [in]			tokensSold.add(tokens)
    tag 41			tokensSold.add(tokens)
      JUMPDEST 			tokensSold.add(tokens)
      PUSH 3			tokensSold
      DUP2 			tokensSold = tokensSold.add(to...
      SWAP1 			tokensSold = tokensSold.add(to...
      SSTORE 			tokensSold = tokensSold.add(to...
      POP 			tokensSold = tokensSold.add(to...
      PUSH [tag] 42			cap.sub(tokensSold)
      PUSH 3			tokensSold
      SLOAD 			tokensSold
      PUSH B4F21D42F59C0D52C0000000			56*10**27
      PUSH [tag] 37			cap.sub
      SWAP1 			cap.sub
      SWAP2 			cap.sub(tokensSold)
      SWAP1 			cap.sub(tokensSold)
      PUSH FFFFFFFF			cap.sub(tokensSold)
      AND 			cap.sub(tokensSold)
      JUMP [in]			cap.sub(tokensSold)
    tag 42			cap.sub(tokensSold)
      JUMPDEST 			cap.sub(tokensSold)
      PUSH 4			remainingTokens
      DUP2 			remainingTokens = cap.sub(toke...
      SWAP1 			remainingTokens = cap.sub(toke...
      SSTORE 			remainingTokens = cap.sub(toke...
      POP 			remainingTokens = cap.sub(toke...
      PUSH 0			0
      DUP4 			returnWei
      GT 			returnWei > 0
      ISZERO 			if(returnWei > 0){
\n         ...
      PUSH [tag] 43			if(returnWei > 0){
\n         ...
      JUMPI 			if(returnWei > 0){
\n         ...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender.transfer
      AND 			msg.sender.transfer
      PUSH 8FC			msg.sender.transfer(returnWei)
      DUP5 			returnWei
      SWAP1 			msg.sender.transfer(returnWei)
      DUP2 			msg.sender.transfer(returnWei)
      ISZERO 			msg.sender.transfer(returnWei)
      MUL 			msg.sender.transfer(returnWei)
      SWAP1 			msg.sender.transfer(returnWei)
      PUSH 40			msg.sender.transfer(returnWei)
      MLOAD 			msg.sender.transfer(returnWei)
      PUSH 0			msg.sender.transfer(returnWei)
      PUSH 40			msg.sender.transfer(returnWei)
      MLOAD 			msg.sender.transfer(returnWei)
      DUP1 			msg.sender.transfer(returnWei)
      DUP4 			msg.sender.transfer(returnWei)
      SUB 			msg.sender.transfer(returnWei)
      DUP2 			msg.sender.transfer(returnWei)
      DUP6 			msg.sender.transfer(returnWei)
      DUP9 			msg.sender.transfer(returnWei)
      DUP9 			msg.sender.transfer(returnWei)
      CALL 			msg.sender.transfer(returnWei)
      SWAP4 			msg.sender.transfer(returnWei)
      POP 			msg.sender.transfer(returnWei)
      POP 			msg.sender.transfer(returnWei)
      POP 			msg.sender.transfer(returnWei)
      POP 			msg.sender.transfer(returnWei)
      ISZERO 			msg.sender.transfer(returnWei)
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 44			a
      JUMPI 			a
      RETURNDATASIZE 			----------------
      PUSH 0			-
      DUP1 			-
      RETURNDATACOPY
\n
// ----------------------...
      RETURNDATASIZE 			----------------
      PUSH 0			-
      REVERT 			---------------------------
    tag 44			a
      JUMPDEST 			a
      POP 			msg.sender.transfer(returnWei)
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), msg.se...
      AND 			Transfer(address(this), msg.se...
      ADDRESS 			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), msg.se...
      AND 			Transfer(address(this), msg.se...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(this), msg.se...
      DUP6 			returnWei
      PUSH 40			Transfer(address(this), msg.se...
      MLOAD 			Transfer(address(this), msg.se...
      DUP1 			Transfer(address(this), msg.se...
      DUP3 			Transfer(address(this), msg.se...
      DUP2 			Transfer(address(this), msg.se...
      MSTORE 			Transfer(address(this), msg.se...
      PUSH 20			Transfer(address(this), msg.se...
      ADD 			Transfer(address(this), msg.se...
      SWAP2 			Transfer(address(this), msg.se...
      POP 			Transfer(address(this), msg.se...
      POP 			Transfer(address(this), msg.se...
      PUSH 40			Transfer(address(this), msg.se...
      MLOAD 			Transfer(address(this), msg.se...
      DUP1 			Transfer(address(this), msg.se...
      SWAP2 			Transfer(address(this), msg.se...
      SUB 			Transfer(address(this), msg.se...
      SWAP1 			Transfer(address(this), msg.se...
      LOG3 			Transfer(address(this), msg.se...
    tag 43			if(returnWei > 0){
\n         ...
      JUMPDEST 			if(returnWei > 0){
\n         ...
      PUSH [tag] 45			balances[msg.sender].add(token...
      DUP5 			tokens
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 34			balances[msg.sender].add
      SWAP1 			balances[msg.sender].add
      SWAP2 			balances[msg.sender].add(token...
      SWAP1 			balances[msg.sender].add(token...
      PUSH FFFFFFFF			balances[msg.sender].add(token...
      AND 			balances[msg.sender].add(token...
      JUMP [in]			balances[msg.sender].add(token...
    tag 45			balances[msg.sender].add(token...
      JUMPDEST 			balances[msg.sender].add(token...
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      DUP2 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      POP 			balances[msg.sender] = balance...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), msg.se...
      AND 			Transfer(address(this), msg.se...
      ADDRESS 			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), msg.se...
      AND 			Transfer(address(this), msg.se...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(this), msg.se...
      DUP7 			tokens
      PUSH 40			Transfer(address(this), msg.se...
      MLOAD 			Transfer(address(this), msg.se...
      DUP1 			Transfer(address(this), msg.se...
      DUP3 			Transfer(address(this), msg.se...
      DUP2 			Transfer(address(this), msg.se...
      MSTORE 			Transfer(address(this), msg.se...
      PUSH 20			Transfer(address(this), msg.se...
      ADD 			Transfer(address(this), msg.se...
      SWAP2 			Transfer(address(this), msg.se...
      POP 			Transfer(address(this), msg.se...
      POP 			Transfer(address(this), msg.se...
      PUSH 40			Transfer(address(this), msg.se...
      MLOAD 			Transfer(address(this), msg.se...
      DUP1 			Transfer(address(this), msg.se...
      SWAP2 			Transfer(address(this), msg.se...
      SUB 			Transfer(address(this), msg.se...
      SWAP1 			Transfer(address(this), msg.se...
      LOG3 			Transfer(address(this), msg.se...
      PUSH [tag] 46			totalSupply_.add(tokens)
      DUP5 			tokens
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 34			totalSupply_.add
      SWAP1 			totalSupply_.add
      SWAP2 			totalSupply_.add(tokens)
      SWAP1 			totalSupply_.add(tokens)
      PUSH FFFFFFFF			totalSupply_.add(tokens)
      AND 			totalSupply_.add(tokens)
      JUMP [in]			totalSupply_.add(tokens)
    tag 46			totalSupply_.add(tokens)
      JUMPDEST 			totalSupply_.add(tokens)
      PUSH 1			totalSupply_
      DUP2 			totalSupply_ = totalSupply_.ad...
      SWAP1 			totalSupply_ = totalSupply_.ad...
      SSTORE 			totalSupply_ = totalSupply_.ad...
      POP 			totalSupply_ = totalSupply_.ad...
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner.transfer
      AND 			owner.transfer
      PUSH 8FC			owner.transfer(weiAmount)
      DUP7 			weiAmount
      SWAP1 			owner.transfer(weiAmount)
      DUP2 			owner.transfer(weiAmount)
      ISZERO 			owner.transfer(weiAmount)
      MUL 			owner.transfer(weiAmount)
      SWAP1 			owner.transfer(weiAmount)
      PUSH 40			owner.transfer(weiAmount)
      MLOAD 			owner.transfer(weiAmount)
      PUSH 0			owner.transfer(weiAmount)
      PUSH 40			owner.transfer(weiAmount)
      MLOAD 			owner.transfer(weiAmount)
      DUP1 			owner.transfer(weiAmount)
      DUP4 			owner.transfer(weiAmount)
      SUB 			owner.transfer(weiAmount)
      DUP2 			owner.transfer(weiAmount)
      DUP6 			owner.transfer(weiAmount)
      DUP9 			owner.transfer(weiAmount)
      DUP9 			owner.transfer(weiAmount)
      CALL 			owner.transfer(weiAmount)
      SWAP4 			owner.transfer(weiAmount)
      POP 			owner.transfer(weiAmount)
      POP 			owner.transfer(weiAmount)
      POP 			owner.transfer(weiAmount)
      POP 			owner.transfer(weiAmount)
      ISZERO 			owner.transfer(weiAmount)
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 47			a
      JUMPI 			a
      RETURNDATASIZE 			----------------
      PUSH 0			-
      DUP1 			-
      RETURNDATACOPY
\n
// ----------------------...
      RETURNDATASIZE 			----------------
      PUSH 0			-
      REVERT 			---------------------------
    tag 47			a
      JUMPDEST 			a
      POP 			owner.transfer(weiAmount)
      POP 			function () public payable {
\...
      POP 			function () public payable {
\...
      POP 			function () public payable {
\...
      POP 			function () public payable {
\...
      POP 			function () public payable {
\...
      STOP 			contract DronairToken is Crowd...
    tag 2			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      CALLVALUE 			string public constant name = ...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 48			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 48			a
      JUMPDEST 			a
      POP 			string public constant name = ...
      PUSH [tag] 49			string public constant name = ...
      PUSH [tag] 50			string public constant name = ...
      JUMP 			string public constant name = ...
    tag 49			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      DUP3 			string public constant name = ...
      DUP2 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP3 			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP2 			string public constant name = ...
      DUP2 			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 0			;
    tag 51			olidity ^0.4.25;
\n
// ------...
      JUMPDEST 			olidity ^0.4.25;
\n
// ------...
      DUP4 			---
      DUP2
      LT 			\n// ------
      ISZERO 			olidity ^0.4.25;
\n
// ------...
      PUSH [tag] 52			olidity ^0.4.25;
\n
// ------...
      JUMPI 			olidity ^0.4.25;
\n
// ------...
      DUP1 			-
      DUP3 			---
      ADD 			-----------
      MLOAD 			------------------
      DUP2 			-
      DUP5 			---
      ADD 			-----------
      MSTORE 			------------------------------...
      PUSH 20			--
      DUP2 			-
      ADD 			----------
      SWAP1 			---------------
      POP 			---------------
      PUSH [tag] 51			olidity ^0.4.25;
\n
// ------...
      JUMP 			olidity ^0.4.25;
\n
// ------...
    tag 52			olidity ^0.4.25;
\n
// ------...
      JUMPDEST 			olidity ^0.4.25;
\n
// ------...
      POP 			ity ^0.4.25;
\n
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 1F			string public constant name = ...
      AND 			string public constant name = ...
      DUP1 			string public constant name = ...
      ISZERO 			string public constant name = ...
      PUSH [tag] 54			string public constant name = ...
      JUMPI 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP3 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      PUSH 1			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 20			string public constant name = ...
      SUB 			string public constant name = ...
      PUSH 100			string public constant name = ...
      EXP 			string public constant name = ...
      SUB 			string public constant name = ...
      NOT 			string public constant name = ...
      AND 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
    tag 54			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP3 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      SWAP2 			string public constant name = ...
      SUB 			string public constant name = ...
      SWAP1 			string public constant name = ...
      RETURN 			string public constant name = ...
    tag 3			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      CALLVALUE 			function approve(address _spen...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 55			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 55			a
      JUMPDEST 			a
      POP 			function approve(address _spen...
      PUSH [tag] 56			function approve(address _spen...
      PUSH 4			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATASIZE 			function approve(address _spen...
      SUB 			function approve(address _spen...
      DUP2 			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function approve(address _spen...
      AND 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH [tag] 57			function approve(address _spen...
      JUMP 			function approve(address _spen...
    tag 56			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP3 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      DUP2 			function approve(address _spen...
      MSTORE 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SUB 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      RETURN 			function approve(address _spen...
    tag 4			function totalSupply() public ...
      JUMPDEST 			function totalSupply() public ...
      CALLVALUE 			function totalSupply() public ...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 58			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 58			a
      JUMPDEST 			a
      POP 			function totalSupply() public ...
      PUSH [tag] 59			function totalSupply() public ...
      PUSH [tag] 60			function totalSupply() public ...
      JUMP 			function totalSupply() public ...
    tag 59			function totalSupply() public ...
      JUMPDEST 			function totalSupply() public ...
      PUSH 40			function totalSupply() public ...
      MLOAD 			function totalSupply() public ...
      DUP1 			function totalSupply() public ...
      DUP3 			function totalSupply() public ...
      DUP2 			function totalSupply() public ...
      MSTORE 			function totalSupply() public ...
      PUSH 20			function totalSupply() public ...
      ADD 			function totalSupply() public ...
      SWAP2 			function totalSupply() public ...
      POP 			function totalSupply() public ...
      POP 			function totalSupply() public ...
      PUSH 40			function totalSupply() public ...
      MLOAD 			function totalSupply() public ...
      DUP1 			function totalSupply() public ...
      SWAP2 			function totalSupply() public ...
      SUB 			function totalSupply() public ...
      SWAP1 			function totalSupply() public ...
      RETURN 			function totalSupply() public ...
    tag 5			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      CALLVALUE 			function transferFrom(address ...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 61			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 61			a
      JUMPDEST 			a
      POP 			function transferFrom(address ...
      PUSH [tag] 62			function transferFrom(address ...
      PUSH 4			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATASIZE 			function transferFrom(address ...
      SUB 			function transferFrom(address ...
      DUP2 			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH [tag] 63			function transferFrom(address ...
      JUMP 			function transferFrom(address ...
    tag 62			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP3 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      DUP2 			function transferFrom(address ...
      MSTORE 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SUB 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      RETURN 			function transferFrom(address ...
    tag 6			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      CALLVALUE 			uint32 public constant decimal...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 64			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 64			a
      JUMPDEST 			a
      POP 			uint32 public constant decimal...
      PUSH [tag] 65			uint32 public constant decimal...
      PUSH [tag] 66			uint32 public constant decimal...
      JUMP 			uint32 public constant decimal...
    tag 65			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      PUSH 40			uint32 public constant decimal...
      MLOAD 			uint32 public constant decimal...
      DUP1 			uint32 public constant decimal...
      DUP3 			uint32 public constant decimal...
      PUSH FFFFFFFF			uint32 public constant decimal...
      AND 			uint32 public constant decimal...
      PUSH FFFFFFFF			uint32 public constant decimal...
      AND 			uint32 public constant decimal...
      DUP2 			uint32 public constant decimal...
      MSTORE 			uint32 public constant decimal...
      PUSH 20			uint32 public constant decimal...
      ADD 			uint32 public constant decimal...
      SWAP2 			uint32 public constant decimal...
      POP 			uint32 public constant decimal...
      POP 			uint32 public constant decimal...
      PUSH 40			uint32 public constant decimal...
      MLOAD 			uint32 public constant decimal...
      DUP1 			uint32 public constant decimal...
      SWAP2 			uint32 public constant decimal...
      SUB 			uint32 public constant decimal...
      SWAP1 			uint32 public constant decimal...
      RETURN 			uint32 public constant decimal...
    tag 7			uint256 public constant cap = ...
      JUMPDEST 			uint256 public constant cap = ...
      CALLVALUE 			uint256 public constant cap = ...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 67			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 67			a
      JUMPDEST 			a
      POP 			uint256 public constant cap = ...
      PUSH [tag] 68			uint256 public constant cap = ...
      PUSH [tag] 69			uint256 public constant cap = ...
      JUMP 			uint256 public constant cap = ...
    tag 68			uint256 public constant cap = ...
      JUMPDEST 			uint256 public constant cap = ...
      PUSH 40			uint256 public constant cap = ...
      MLOAD 			uint256 public constant cap = ...
      DUP1 			uint256 public constant cap = ...
      DUP3 			uint256 public constant cap = ...
      DUP2 			uint256 public constant cap = ...
      MSTORE 			uint256 public constant cap = ...
      PUSH 20			uint256 public constant cap = ...
      ADD 			uint256 public constant cap = ...
      SWAP2 			uint256 public constant cap = ...
      POP 			uint256 public constant cap = ...
      POP 			uint256 public constant cap = ...
      PUSH 40			uint256 public constant cap = ...
      MLOAD 			uint256 public constant cap = ...
      DUP1 			uint256 public constant cap = ...
      SWAP2 			uint256 public constant cap = ...
      SUB 			uint256 public constant cap = ...
      SWAP1 			uint256 public constant cap = ...
      RETURN 			uint256 public constant cap = ...
    tag 8			uint256 public tokensSold = 0
      JUMPDEST 			uint256 public tokensSold = 0
      CALLVALUE 			uint256 public tokensSold = 0
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 70			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 70			a
      JUMPDEST 			a
      POP 			uint256 public tokensSold = 0
      PUSH [tag] 71			uint256 public tokensSold = 0
      PUSH [tag] 72			uint256 public tokensSold = 0
      JUMP 			uint256 public tokensSold = 0
    tag 71			uint256 public tokensSold = 0
      JUMPDEST 			uint256 public tokensSold = 0
      PUSH 40			uint256 public tokensSold = 0
      MLOAD 			uint256 public tokensSold = 0
      DUP1 			uint256 public tokensSold = 0
      DUP3 			uint256 public tokensSold = 0
      DUP2 			uint256 public tokensSold = 0
      MSTORE 			uint256 public tokensSold = 0
      PUSH 20			uint256 public tokensSold = 0
      ADD 			uint256 public tokensSold = 0
      SWAP2 			uint256 public tokensSold = 0
      POP 			uint256 public tokensSold = 0
      POP 			uint256 public tokensSold = 0
      PUSH 40			uint256 public tokensSold = 0
      MLOAD 			uint256 public tokensSold = 0
      DUP1 			uint256 public tokensSold = 0
      SWAP2 			uint256 public tokensSold = 0
      SUB 			uint256 public tokensSold = 0
      SWAP1 			uint256 public tokensSold = 0
      RETURN 			uint256 public tokensSold = 0
    tag 9			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      CALLVALUE 			function decreaseApproval(addr...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 73			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 73			a
      JUMPDEST 			a
      POP 			function decreaseApproval(addr...
      PUSH [tag] 74			function decreaseApproval(addr...
      PUSH 4			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      CALLDATASIZE 			function decreaseApproval(addr...
      SUB 			function decreaseApproval(addr...
      DUP2 			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      CALLDATALOAD 			function decreaseApproval(addr...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function decreaseApproval(addr...
      AND 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      PUSH 20			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      SWAP3 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      CALLDATALOAD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      PUSH 20			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      SWAP3 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      PUSH [tag] 75			function decreaseApproval(addr...
      JUMP 			function decreaseApproval(addr...
    tag 74			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH 40			function decreaseApproval(addr...
      MLOAD 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      DUP3 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      DUP2 			function decreaseApproval(addr...
      MSTORE 			function decreaseApproval(addr...
      PUSH 20			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      PUSH 40			function decreaseApproval(addr...
      MLOAD 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      SUB 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      RETURN 			function decreaseApproval(addr...
    tag 10			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      CALLVALUE 			function balanceOf(address _ow...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 76			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 76			a
      JUMPDEST 			a
      POP 			function balanceOf(address _ow...
      PUSH [tag] 77			function balanceOf(address _ow...
      PUSH 4			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      CALLDATASIZE 			function balanceOf(address _ow...
      SUB 			function balanceOf(address _ow...
      DUP2 			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      CALLDATALOAD 			function balanceOf(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function balanceOf(address _ow...
      AND 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      SWAP3 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH [tag] 78			function balanceOf(address _ow...
      JUMP 			function balanceOf(address _ow...
    tag 77			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP3 			function balanceOf(address _ow...
      DUP2 			function balanceOf(address _ow...
      MSTORE 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SUB 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      RETURN 			function balanceOf(address _ow...
    tag 11			function startIco() public onl...
      JUMPDEST 			function startIco() public onl...
      CALLVALUE 			function startIco() public onl...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 79			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 79			a
      JUMPDEST 			a
      POP 			function startIco() public onl...
      PUSH [tag] 80			function startIco() public onl...
      PUSH [tag] 81			function startIco() public onl...
      JUMP 			function startIco() public onl...
    tag 80			function startIco() public onl...
      JUMPDEST 			function startIco() public onl...
      STOP 			function startIco() public onl...
    tag 12			address public owner
      JUMPDEST 			address public owner
      CALLVALUE 			address public owner
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 82			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 82			a
      JUMPDEST 			a
      POP 			address public owner
      PUSH [tag] 83			address public owner
      PUSH [tag] 84			address public owner
      JUMP 			address public owner
    tag 83			address public owner
      JUMPDEST 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      DUP1 			address public owner
      DUP3 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      DUP2 			address public owner
      MSTORE 			address public owner
      PUSH 20			address public owner
      ADD 			address public owner
      SWAP2 			address public owner
      POP 			address public owner
      POP 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      DUP1 			address public owner
      SWAP2 			address public owner
      SUB 			address public owner
      SWAP1 			address public owner
      RETURN 			address public owner
    tag 13			function finalizeIco() public ...
      JUMPDEST 			function finalizeIco() public ...
      CALLVALUE 			function finalizeIco() public ...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 85			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 85			a
      JUMPDEST 			a
      POP 			function finalizeIco() public ...
      PUSH [tag] 86			function finalizeIco() public ...
      PUSH [tag] 87			function finalizeIco() public ...
      JUMP 			function finalizeIco() public ...
    tag 86			function finalizeIco() public ...
      JUMPDEST 			function finalizeIco() public ...
      STOP 			function finalizeIco() public ...
    tag 14			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      CALLVALUE 			string public constant symbol ...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 88			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 88			a
      JUMPDEST 			a
      POP 			string public constant symbol ...
      PUSH [tag] 89			string public constant symbol ...
      PUSH [tag] 90			string public constant symbol ...
      JUMP 			string public constant symbol ...
    tag 89			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 0			;
    tag 91			olidity ^0.4.25;
\n
// ------...
      JUMPDEST 			olidity ^0.4.25;
\n
// ------...
      DUP4 			---
      DUP2
      LT 			\n// ------
      ISZERO 			olidity ^0.4.25;
\n
// ------...
      PUSH [tag] 92			olidity ^0.4.25;
\n
// ------...
      JUMPI 			olidity ^0.4.25;
\n
// ------...
      DUP1 			-
      DUP3 			---
      ADD 			-----------
      MLOAD 			------------------
      DUP2 			-
      DUP5 			---
      ADD 			-----------
      MSTORE 			------------------------------...
      PUSH 20			--
      DUP2 			-
      ADD 			----------
      SWAP1 			---------------
      POP 			---------------
      PUSH [tag] 91			olidity ^0.4.25;
\n
// ------...
      JUMP 			olidity ^0.4.25;
\n
// ------...
    tag 92			olidity ^0.4.25;
\n
// ------...
      JUMPDEST 			olidity ^0.4.25;
\n
// ------...
      POP 			ity ^0.4.25;
\n
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 1F			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      ISZERO 			string public constant symbol ...
      PUSH [tag] 94			string public constant symbol ...
      JUMPI 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      PUSH 1			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      SUB 			string public constant symbol ...
      PUSH 100			string public constant symbol ...
      EXP 			string public constant symbol ...
      SUB 			string public constant symbol ...
      NOT 			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
    tag 94			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP3 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      RETURN 			string public constant symbol ...
    tag 15			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      CALLVALUE 			function transfer(address _to,...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 95			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 95			a
      JUMPDEST 			a
      POP 			function transfer(address _to,...
      PUSH [tag] 96			function transfer(address _to,...
      PUSH 4			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATASIZE 			function transfer(address _to,...
      SUB 			function transfer(address _to,...
      DUP2 			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transfer(address _to,...
      AND 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH [tag] 97			function transfer(address _to,...
      JUMP 			function transfer(address _to,...
    tag 96			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP3 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      DUP2 			function transfer(address _to,...
      MSTORE 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SUB 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      RETURN 			function transfer(address _to,...
    tag 16			uint256 public remainingTokens...
      JUMPDEST 			uint256 public remainingTokens...
      CALLVALUE 			uint256 public remainingTokens...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 98			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 98			a
      JUMPDEST 			a
      POP 			uint256 public remainingTokens...
      PUSH [tag] 99			uint256 public remainingTokens...
      PUSH [tag] 100			uint256 public remainingTokens...
      JUMP 			uint256 public remainingTokens...
    tag 99			uint256 public remainingTokens...
      JUMPDEST 			uint256 public remainingTokens...
      PUSH 40			uint256 public remainingTokens...
      MLOAD 			uint256 public remainingTokens...
      DUP1 			uint256 public remainingTokens...
      DUP3 			uint256 public remainingTokens...
      DUP2 			uint256 public remainingTokens...
      MSTORE 			uint256 public remainingTokens...
      PUSH 20			uint256 public remainingTokens...
      ADD 			uint256 public remainingTokens...
      SWAP2 			uint256 public remainingTokens...
      POP 			uint256 public remainingTokens...
      POP 			uint256 public remainingTokens...
      PUSH 40			uint256 public remainingTokens...
      MLOAD 			uint256 public remainingTokens...
      DUP1 			uint256 public remainingTokens...
      SWAP2 			uint256 public remainingTokens...
      SUB 			uint256 public remainingTokens...
      SWAP1 			uint256 public remainingTokens...
      RETURN 			uint256 public remainingTokens...
    tag 17			uint256 public constant basePr...
      JUMPDEST 			uint256 public constant basePr...
      CALLVALUE 			uint256 public constant basePr...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 101			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 101			a
      JUMPDEST 			a
      POP 			uint256 public constant basePr...
      PUSH [tag] 102			uint256 public constant basePr...
      PUSH [tag] 103			uint256 public constant basePr...
      JUMP 			uint256 public constant basePr...
    tag 102			uint256 public constant basePr...
      JUMPDEST 			uint256 public constant basePr...
      PUSH 40			uint256 public constant basePr...
      MLOAD 			uint256 public constant basePr...
      DUP1 			uint256 public constant basePr...
      DUP3 			uint256 public constant basePr...
      DUP2 			uint256 public constant basePr...
      MSTORE 			uint256 public constant basePr...
      PUSH 20			uint256 public constant basePr...
      ADD 			uint256 public constant basePr...
      SWAP2 			uint256 public constant basePr...
      POP 			uint256 public constant basePr...
      POP 			uint256 public constant basePr...
      PUSH 40			uint256 public constant basePr...
      MLOAD 			uint256 public constant basePr...
      DUP1 			uint256 public constant basePr...
      SWAP2 			uint256 public constant basePr...
      SUB 			uint256 public constant basePr...
      SWAP1 			uint256 public constant basePr...
      RETURN 			uint256 public constant basePr...
    tag 18			uint256 public constant tokenR...
      JUMPDEST 			uint256 public constant tokenR...
      CALLVALUE 			uint256 public constant tokenR...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 104			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 104			a
      JUMPDEST 			a
      POP 			uint256 public constant tokenR...
      PUSH [tag] 105			uint256 public constant tokenR...
      PUSH [tag] 106			uint256 public constant tokenR...
      JUMP 			uint256 public constant tokenR...
    tag 105			uint256 public constant tokenR...
      JUMPDEST 			uint256 public constant tokenR...
      PUSH 40			uint256 public constant tokenR...
      MLOAD 			uint256 public constant tokenR...
      DUP1 			uint256 public constant tokenR...
      DUP3 			uint256 public constant tokenR...
      DUP2 			uint256 public constant tokenR...
      MSTORE 			uint256 public constant tokenR...
      PUSH 20			uint256 public constant tokenR...
      ADD 			uint256 public constant tokenR...
      SWAP2 			uint256 public constant tokenR...
      POP 			uint256 public constant tokenR...
      POP 			uint256 public constant tokenR...
      PUSH 40			uint256 public constant tokenR...
      MLOAD 			uint256 public constant tokenR...
      DUP1 			uint256 public constant tokenR...
      SWAP2 			uint256 public constant tokenR...
      SUB 			uint256 public constant tokenR...
      SWAP1 			uint256 public constant tokenR...
      RETURN 			uint256 public constant tokenR...
    tag 19			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      CALLVALUE 			function increaseApproval(addr...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 107			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 107			a
      JUMPDEST 			a
      POP 			function increaseApproval(addr...
      PUSH [tag] 108			function increaseApproval(addr...
      PUSH 4			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      CALLDATASIZE 			function increaseApproval(addr...
      SUB 			function increaseApproval(addr...
      DUP2 			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      CALLDATALOAD 			function increaseApproval(addr...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function increaseApproval(addr...
      AND 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      PUSH 20			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      CALLDATALOAD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      PUSH 20			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      PUSH [tag] 109			function increaseApproval(addr...
      JUMP 			function increaseApproval(addr...
    tag 108			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH 40			function increaseApproval(addr...
      MLOAD 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      DUP3 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      DUP2 			function increaseApproval(addr...
      MSTORE 			function increaseApproval(addr...
      PUSH 20			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      PUSH 40			function increaseApproval(addr...
      MLOAD 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      SUB 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      RETURN 			function increaseApproval(addr...
    tag 20			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      CALLVALUE 			function allowance(address _ow...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 110			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 110			a
      JUMPDEST 			a
      POP 			function allowance(address _ow...
      PUSH [tag] 111			function allowance(address _ow...
      PUSH 4			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATASIZE 			function allowance(address _ow...
      SUB 			function allowance(address _ow...
      DUP2 			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH [tag] 112			function allowance(address _ow...
      JUMP 			function allowance(address _ow...
    tag 111			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP3 			function allowance(address _ow...
      DUP2 			function allowance(address _ow...
      MSTORE 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SUB 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      RETURN 			function allowance(address _ow...
    tag 21			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      CALLVALUE 			function transferOwnership(add...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 113			a
      JUMPI 			a
      PUSH 0
      DUP1 			\n
      REVERT 			.25;
\n
// -
    tag 113			a
      JUMPDEST 			a
      POP 			function transferOwnership(add...
      PUSH [tag] 114			function transferOwnership(add...
      PUSH 4			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      CALLDATASIZE 			function transferOwnership(add...
      SUB 			function transferOwnership(add...
      DUP2 			function transferOwnership(add...
      ADD 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      CALLDATALOAD 			function transferOwnership(add...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferOwnership(add...
      AND 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      PUSH 20			function transferOwnership(add...
      ADD 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      SWAP3 			function transferOwnership(add...
      SWAP2 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      PUSH [tag] 115			function transferOwnership(add...
      JUMP 			function transferOwnership(add...
    tag 114			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      STOP 			function transferOwnership(add...
    tag 31			function mul(uint256 a, uint25...
      JUMPDEST 			function mul(uint256 a, uint25...
      PUSH 0			uint256 c
      DUP1 			0
      DUP4 			a
      EQ 			a == 0
      ISZERO 			if (a == 0) {
\n            re...
      PUSH [tag] 117			if (a == 0) {
\n            re...
      JUMPI 			if (a == 0) {
\n            re...
      PUSH 0			0
      SWAP1 			return 0
      POP 			return 0
      PUSH [tag] 116			return 0
      JUMP 			return 0
    tag 117			if (a == 0) {
\n            re...
      JUMPDEST 			if (a == 0) {
\n            re...
      DUP2 			b
      DUP4 			a
      MUL 			a * b
      SWAP1 			c = a * b
      POP 			c = a * b
      DUP2 			b
      DUP4 			a
      DUP3 			c
      DUP2 			c / a
      ISZERO 			c / a
      ISZERO 			c / a
      PUSH [tag] 118			c / a
      JUMPI 			c / a
      INVALID 			c / a
    tag 118			c / a
      JUMPDEST 			c / a
      DIV 			c / a
      EQ 			c / a == b
      ISZERO 			assert(c / a == b)
      ISZERO 			assert(c / a == b)
      PUSH [tag] 119			assert(c / a == b)
      JUMPI 			assert(c / a == b)
      INVALID 			assert(c / a == b)
    tag 119			assert(c / a == b)
      JUMPDEST 			assert(c / a == b)
      DUP1 			c
      SWAP1 			return c
      POP 			return c
    tag 116			function mul(uint256 a, uint25...
      JUMPDEST 			function mul(uint256 a, uint25...
      SWAP3 			function mul(uint256 a, uint25...
      SWAP2 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      JUMP [out]			function mul(uint256 a, uint25...
    tag 32			function div(uint256 a, uint25...
      JUMPDEST 			function div(uint256 a, uint25...
      PUSH 0			uint256
      DUP2 			b
      DUP4 			a
      DUP2 			a / b
      ISZERO 			a / b
      ISZERO 			a / b
      PUSH [tag] 121			a / b
      JUMPI 			a / b
      INVALID 			a / b
    tag 121			a / b
      JUMPDEST 			a / b
      DIV 			a / b
      SWAP1 			return a / b
      POP 			return a / b
      SWAP3 			function div(uint256 a, uint25...
      SWAP2 			function div(uint256 a, uint25...
      POP 			function div(uint256 a, uint25...
      POP 			function div(uint256 a, uint25...
      JUMP [out]			function div(uint256 a, uint25...
    tag 34			function add(uint256 a, uint25...
      JUMPDEST 			function add(uint256 a, uint25...
      PUSH 0			uint256 c
      DUP2 			b
      DUP4 			a
      ADD 			a + b
      SWAP1 			c = a + b
      POP 			c = a + b
      DUP3 			a
      DUP2 			c
      LT 			c >= a
      ISZERO 			c >= a
      ISZERO 			assert(c >= a)
      ISZERO 			assert(c >= a)
      PUSH [tag] 123			assert(c >= a)
      JUMPI 			assert(c >= a)
      INVALID 			assert(c >= a)
    tag 123			assert(c >= a)
      JUMPDEST 			assert(c >= a)
      DUP1 			c
      SWAP1 			return c
      POP 			return c
      SWAP3 			function add(uint256 a, uint25...
      SWAP2 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      JUMP [out]			function add(uint256 a, uint25...
    tag 37			function sub(uint256 a, uint25...
      JUMPDEST 			function sub(uint256 a, uint25...
      PUSH 0			uint256
      DUP3 			a
      DUP3 			b
      GT 			b <= a
      ISZERO 			b <= a
      ISZERO 			assert(b <= a)
      ISZERO 			assert(b <= a)
      PUSH [tag] 125			assert(b <= a)
      JUMPI 			assert(b <= a)
      INVALID 			assert(b <= a)
    tag 125			assert(b <= a)
      JUMPDEST 			assert(b <= a)
      DUP2 			b
      DUP4 			a
      SUB 			a - b
      SWAP1 			return a - b
      POP 			return a - b
      SWAP3 			function sub(uint256 a, uint25...
      SWAP2 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      JUMP [out]			function sub(uint256 a, uint25...
    tag 50			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH 7			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 44726F6E61697200000000000000000000000000000000000000000000000000			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      POP 			string public constant name = ...
      DUP2 			string public constant name = ...
      JUMP [out]			string public constant name = ...
    tag 57			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 0			bool
      DUP2 			_value
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      DUP3 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      DUP5 			_value
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      JUMP [out]			function approve(address _spen...
    tag 60			function totalSupply() public ...
      JUMPDEST 			function totalSupply() public ...
      PUSH 0			uint256
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      SWAP1 			return totalSupply_
      POP 			return totalSupply_
      SWAP1 			function totalSupply() public ...
      JUMP [out]			function totalSupply() public ...
    tag 63			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 0			bool
      DUP1 			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      EQ 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			require(_to != address(0))
      ISZERO 			require(_to != address(0))
      PUSH [tag] 129			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 129			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 0			balances
      DUP1 			balances[_from]
      DUP6 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      DUP3 			_value
      GT 			_value <= balances[_from]
      ISZERO 			_value <= balances[_from]
      ISZERO 			require(_value <= balances[_fr...
      ISZERO 			require(_value <= balances[_fr...
      PUSH [tag] 130			require(_value <= balances[_fr...
      JUMPI 			require(_value <= balances[_fr...
      PUSH 0			require(_value <= balances[_fr...
      DUP1 			require(_value <= balances[_fr...
      REVERT 			require(_value <= balances[_fr...
    tag 130			require(_value <= balances[_fr...
      JUMPDEST 			require(_value <= balances[_fr...
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP6 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      DUP3 			_value
      GT 			_value <= allowed[_from][msg.s...
      ISZERO 			_value <= allowed[_from][msg.s...
      ISZERO 			require(_value <= allowed[_fro...
      ISZERO 			require(_value <= allowed[_fro...
      PUSH [tag] 131			require(_value <= allowed[_fro...
      JUMPI 			require(_value <= allowed[_fro...
      PUSH 0			require(_value <= allowed[_fro...
      DUP1 			require(_value <= allowed[_fro...
      REVERT 			require(_value <= allowed[_fro...
    tag 131			require(_value <= allowed[_fro...
      JUMPDEST 			require(_value <= allowed[_fro...
      PUSH [tag] 132			balances[_from].sub(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      PUSH [tag] 37			balances[_from].sub
      SWAP1 			balances[_from].sub
      SWAP2 			balances[_from].sub(_value)
      SWAP1 			balances[_from].sub(_value)
      PUSH FFFFFFFF			balances[_from].sub(_value)
      AND 			balances[_from].sub(_value)
      JUMP [in]			balances[_from].sub(_value)
    tag 132			balances[_from].sub(_value)
      JUMPDEST 			balances[_from].sub(_value)
      PUSH 0			balances
      DUP1 			balances[_from]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      DUP2 			balances[_from] = balances[_fr...
      SWAP1 			balances[_from] = balances[_fr...
      SSTORE 			balances[_from] = balances[_fr...
      POP 			balances[_from] = balances[_fr...
      PUSH [tag] 133			balances[_to].add(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 34			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      PUSH FFFFFFFF			balances[_to].add(_value)
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 133			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      PUSH [tag] 134			allowed[_from][msg.sender].sub...
      DUP3 			_value
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      PUSH [tag] 37			allowed[_from][msg.sender].sub
      SWAP1 			allowed[_from][msg.sender].sub
      SWAP2 			allowed[_from][msg.sender].sub...
      SWAP1 			allowed[_from][msg.sender].sub...
      PUSH FFFFFFFF			allowed[_from][msg.sender].sub...
      AND 			allowed[_from][msg.sender].sub...
      JUMP [in]			allowed[_from][msg.sender].sub...
    tag 134			allowed[_from][msg.sender].sub...
      JUMPDEST 			allowed[_from][msg.sender].sub...
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender] = a...
      SWAP1 			allowed[_from][msg.sender] = a...
      SSTORE 			allowed[_from][msg.sender] = a...
      POP 			allowed[_from][msg.sender] = a...
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
      AND 			Transfer(_from, _to, _value)
      DUP5 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
      AND 			Transfer(_from, _to, _value)
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(_from, _to, _value)
      DUP5 			_value
      PUSH 40			Transfer(_from, _to, _value)
      MLOAD 			Transfer(_from, _to, _value)
      DUP1 			Transfer(_from, _to, _value)
      DUP3 			Transfer(_from, _to, _value)
      DUP2 			Transfer(_from, _to, _value)
      MSTORE 			Transfer(_from, _to, _value)
      PUSH 20			Transfer(_from, _to, _value)
      ADD 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      POP 			Transfer(_from, _to, _value)
      POP 			Transfer(_from, _to, _value)
      PUSH 40			Transfer(_from, _to, _value)
      MLOAD 			Transfer(_from, _to, _value)
      DUP1 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      SUB 			Transfer(_from, _to, _value)
      SWAP1 			Transfer(_from, _to, _value)
      LOG3 			Transfer(_from, _to, _value)
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP4 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      JUMP [out]			function transferFrom(address ...
    tag 66			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      PUSH 12			18
      DUP2 			uint32 public constant decimal...
      JUMP [out]			uint32 public constant decimal...
    tag 69			uint256 public constant cap = ...
      JUMPDEST 			uint256 public constant cap = ...
      PUSH B4F21D42F59C0D52C0000000			56*10**27
      DUP2 			uint256 public constant cap = ...
      JUMP [out]			uint256 public constant cap = ...
    tag 72			uint256 public tokensSold = 0
      JUMPDEST 			uint256 public tokensSold = 0
      PUSH 3			uint256 public tokensSold = 0
      SLOAD 			uint256 public tokensSold = 0
      DUP2 			uint256 public tokensSold = 0
      JUMP [out]			uint256 public tokensSold = 0
    tag 75			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH 0			bool
      DUP1 			uint oldValue
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      SWAP1 			uint oldValue = allowed[msg.se...
      POP 			uint oldValue = allowed[msg.se...
      DUP1 			oldValue
      DUP4 			_subtractedValue
      GT 			_subtractedValue > oldValue
      ISZERO 			if (_subtractedValue > oldValu...
      PUSH [tag] 136			if (_subtractedValue > oldValu...
      JUMPI 			if (_subtractedValue > oldValu...
      PUSH 0			0
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP7 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      PUSH [tag] 137			if (_subtractedValue > oldValu...
      JUMP 			if (_subtractedValue > oldValu...
    tag 136			if (_subtractedValue > oldValu...
      JUMPDEST 			if (_subtractedValue > oldValu...
      PUSH [tag] 138			oldValue.sub(_subtractedValue)
      DUP4 			_subtractedValue
      DUP3 			oldValue
      PUSH [tag] 37			oldValue.sub
      SWAP1 			oldValue.sub
      SWAP2 			oldValue.sub(_subtractedValue)
      SWAP1 			oldValue.sub(_subtractedValue)
      PUSH FFFFFFFF			oldValue.sub(_subtractedValue)
      AND 			oldValue.sub(_subtractedValue)
      JUMP [in]			oldValue.sub(_subtractedValue)
    tag 138			oldValue.sub(_subtractedValue)
      JUMPDEST 			oldValue.sub(_subtractedValue)
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP7 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
    tag 137			if (_subtractedValue > oldValu...
      JUMPDEST 			if (_subtractedValue > oldValu...
      DUP4 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP9 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP2 			return true
      POP 			return true
      POP 			function decreaseApproval(addr...
      SWAP3 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      JUMP [out]			function decreaseApproval(addr...
    tag 78			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 0			uint256
      DUP1 			balances
      PUSH 0			balances[_owner]
      DUP4 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      SWAP1 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      PUSH 0			balances[_owner]
      KECCAK256 			balances[_owner]
      SLOAD 			balances[_owner]
      SWAP1 			return balances[_owner]
      POP 			return balances[_owner]
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      JUMP [out]			function balanceOf(address _ow...
    tag 81			function startIco() public onl...
      JUMPDEST 			function startIco() public onl...
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 141			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 141			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 2			Stages.icoEnd
      DUP1 			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 143			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 143			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      PUSH 5			currentStage
      PUSH 14			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 2			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 144			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 144			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      EQ 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      ISZERO 			require(currentStage != Stages...
      ISZERO 			require(currentStage != Stages...
      PUSH [tag] 145			require(currentStage != Stages...
      JUMPI 			require(currentStage != Stages...
      PUSH 0			require(currentStage != Stages...
      DUP1 			require(currentStage != Stages...
      REVERT 			require(currentStage != Stages...
    tag 145			require(currentStage != Stages...
      JUMPDEST 			require(currentStage != Stages...
      PUSH 1			Stages.icoStart
      PUSH 5			currentStage
      PUSH 14			currentStage
      PUSH 100			currentStage = Stages.icoStart
      EXP 			currentStage = Stages.icoStart
      DUP2 			currentStage = Stages.icoStart
      SLOAD 			currentStage = Stages.icoStart
      DUP2 			currentStage = Stages.icoStart
      PUSH FF			currentStage = Stages.icoStart
      MUL 			currentStage = Stages.icoStart
      NOT 			currentStage = Stages.icoStart
      AND 			currentStage = Stages.icoStart
      SWAP1 			currentStage = Stages.icoStart
      DUP4 			currentStage = Stages.icoStart
      PUSH 2			currentStage = Stages.icoStart
      DUP2 			currentStage = Stages.icoStart
      GT 			currentStage = Stages.icoStart
      ISZERO 			currentStage = Stages.icoStart
      PUSH [tag] 146			currentStage = Stages.icoStart
      JUMPI 			currentStage = Stages.icoStart
      INVALID 			currentStage = Stages.icoStart
    tag 146			currentStage = Stages.icoStart
      JUMPDEST 			currentStage = Stages.icoStart
      MUL 			currentStage = Stages.icoStart
      OR 			currentStage = Stages.icoStart
      SWAP1 			currentStage = Stages.icoStart
      SSTORE 			currentStage = Stages.icoStart
      POP 			currentStage = Stages.icoStart
      JUMP [out]			function startIco() public onl...
    tag 84			address public owner
      JUMPDEST 			address public owner
      PUSH 5			address public owner
      PUSH 0			address public owner
      SWAP1 			address public owner
      SLOAD 			address public owner
      SWAP1 			address public owner
      PUSH 100			address public owner
      EXP 			address public owner
      SWAP1 			address public owner
      DIV 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      DUP2 			address public owner
      JUMP [out]			address public owner
    tag 87			function finalizeIco() public ...
      JUMPDEST 			function finalizeIco() public ...
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 148			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 148			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 2			Stages.icoEnd
      DUP1 			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 150			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 150			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      PUSH 5			currentStage
      PUSH 14			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 2			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 151			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 151			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      EQ 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      ISZERO 			require(currentStage != Stages...
      ISZERO 			require(currentStage != Stages...
      PUSH [tag] 152			require(currentStage != Stages...
      JUMPI 			require(currentStage != Stages...
      PUSH 0			require(currentStage != Stages...
      DUP1 			require(currentStage != Stages...
      REVERT 			require(currentStage != Stages...
    tag 152			require(currentStage != Stages...
      JUMPDEST 			require(currentStage != Stages...
      PUSH [tag] 153			endIco()
      PUSH [tag] 154			endIco
      JUMP [in]			endIco()
    tag 153			endIco()
      JUMPDEST 			endIco()
      JUMP [out]			function finalizeIco() public ...
    tag 90			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 4			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 4441495200000000000000000000000000000000000000000000000000000000			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      JUMP [out]			string public constant symbol ...
    tag 97			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool
      DUP1 			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      EQ 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			require(_to != address(0))
      ISZERO 			require(_to != address(0))
      PUSH [tag] 156			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 156			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      DUP3 			_value
      GT 			_value <= balances[msg.sender]
      ISZERO 			_value <= balances[msg.sender]
      ISZERO 			require(_value <= balances[msg...
      ISZERO 			require(_value <= balances[msg...
      PUSH [tag] 157			require(_value <= balances[msg...
      JUMPI 			require(_value <= balances[msg...
      PUSH 0			require(_value <= balances[msg...
      DUP1 			require(_value <= balances[msg...
      REVERT 			require(_value <= balances[msg...
    tag 157			require(_value <= balances[msg...
      JUMPDEST 			require(_value <= balances[msg...
      PUSH [tag] 158			balances[msg.sender].sub(_valu...
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 37			balances[msg.sender].sub
      SWAP1 			balances[msg.sender].sub
      SWAP2 			balances[msg.sender].sub(_valu...
      SWAP1 			balances[msg.sender].sub(_valu...
      PUSH FFFFFFFF			balances[msg.sender].sub(_valu...
      AND 			balances[msg.sender].sub(_valu...
      JUMP [in]			balances[msg.sender].sub(_valu...
    tag 158			balances[msg.sender].sub(_valu...
      JUMPDEST 			balances[msg.sender].sub(_valu...
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      DUP2 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      POP 			balances[msg.sender] = balance...
      PUSH [tag] 159			balances[_to].add(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 34			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      PUSH FFFFFFFF			balances[_to].add(_value)
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 159			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(msg.sender, _to, _val...
      DUP5 			_value
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      DUP3 			Transfer(msg.sender, _to, _val...
      DUP2 			Transfer(msg.sender, _to, _val...
      MSTORE 			Transfer(msg.sender, _to, _val...
      PUSH 20			Transfer(msg.sender, _to, _val...
      ADD 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      SUB 			Transfer(msg.sender, _to, _val...
      SWAP1 			Transfer(msg.sender, _to, _val...
      LOG3 			Transfer(msg.sender, _to, _val...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      JUMP [out]			function transfer(address _to,...
    tag 100			uint256 public remainingTokens...
      JUMPDEST 			uint256 public remainingTokens...
      PUSH 4			uint256 public remainingTokens...
      SLOAD 			uint256 public remainingTokens...
      DUP2 			uint256 public remainingTokens...
      JUMP [out]			uint256 public remainingTokens...
    tag 103			uint256 public constant basePr...
      JUMPDEST 			uint256 public constant basePr...
      PUSH 2A9DC8CBDBCD434800000			322*10**22
      DUP2 			uint256 public constant basePr...
      JUMP [out]			uint256 public constant basePr...
    tag 106			uint256 public constant tokenR...
      JUMPDEST 			uint256 public constant tokenR...
      PUSH 10F6B2BE4706A13FC20000000			84*10**27
      DUP2 			uint256 public constant tokenR...
      JUMP [out]			uint256 public constant tokenR...
    tag 109			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH 0			bool
      PUSH [tag] 161			allowed[msg.sender][_spender]....
      DUP3 			_addedValue
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP7 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH [tag] 34			allowed[msg.sender][_spender]....
      SWAP1 			allowed[msg.sender][_spender]....
      SWAP2 			allowed[msg.sender][_spender]....
      SWAP1 			allowed[msg.sender][_spender]....
      PUSH FFFFFFFF			allowed[msg.sender][_spender]....
      AND 			allowed[msg.sender][_spender]....
      JUMP [in]			allowed[msg.sender][_spender]....
    tag 161			allowed[msg.sender][_spender]....
      JUMPDEST 			allowed[msg.sender][_spender]....
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      DUP3 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP8 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      JUMP [out]			function increaseApproval(addr...
    tag 112			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 0			uint256
      PUSH 2			allowed
      PUSH 0			allowed[_owner]
      DUP5 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      SWAP1 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      PUSH 0			allowed[_owner]
      KECCAK256 			allowed[_owner]
      PUSH 0			allowed[_owner][_spender]
      DUP4 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      SWAP1 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      PUSH 0			allowed[_owner][_spender]
      KECCAK256 			allowed[_owner][_spender]
      SLOAD 			allowed[_owner][_spender]
      SWAP1 			return allowed[_owner][_spende...
      POP 			return allowed[_owner][_spende...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      JUMP [out]			function allowance(address _ow...
    tag 115			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 164			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 164			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      DUP2 			newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      EQ 			newOwner != address(0)
      ISZERO 			newOwner != address(0)
      ISZERO 			require(newOwner != address(0)...
      ISZERO 			require(newOwner != address(0)...
      PUSH [tag] 166			require(newOwner != address(0)...
      JUMPI 			require(newOwner != address(0)...
      PUSH 0			require(newOwner != address(0)...
      DUP1 			require(newOwner != address(0)...
      REVERT 			require(newOwner != address(0)...
    tag 166			require(newOwner != address(0)...
      JUMPDEST 			require(newOwner != address(0)...
      DUP1 			newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnershipTransferred(owner, ne...
      AND 			OwnershipTransferred(owner, ne...
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnershipTransferred(owner, ne...
      AND 			OwnershipTransferred(owner, ne...
      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0			OwnershipTransferred(owner, ne...
      PUSH 40			OwnershipTransferred(owner, ne...
      MLOAD 			OwnershipTransferred(owner, ne...
      PUSH 40			OwnershipTransferred(owner, ne...
      MLOAD 			OwnershipTransferred(owner, ne...
      DUP1 			OwnershipTransferred(owner, ne...
      SWAP2 			OwnershipTransferred(owner, ne...
      SUB 			OwnershipTransferred(owner, ne...
      SWAP1 			OwnershipTransferred(owner, ne...
      LOG3 			OwnershipTransferred(owner, ne...
      DUP1 			newOwner
      PUSH 5			owner
      PUSH 0			owner
      PUSH 100			owner = newOwner
      EXP 			owner = newOwner
      DUP2 			owner = newOwner
      SLOAD 			owner = newOwner
      DUP2 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      MUL 			owner = newOwner
      NOT 			owner = newOwner
      AND 			owner = newOwner
      SWAP1 			owner = newOwner
      DUP4 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      AND 			owner = newOwner
      MUL 			owner = newOwner
      OR 			owner = newOwner
      SWAP1 			owner = newOwner
      SSTORE 			owner = newOwner
      POP 			owner = newOwner
      POP 			function transferOwnership(add...
      JUMP [out]			function transferOwnership(add...
    tag 154			function endIco() internal {
\...
      JUMPDEST 			function endIco() internal {
\...
      PUSH 2			Stages.icoEnd
      PUSH 5			currentStage
      PUSH 14			currentStage
      PUSH 100			currentStage = Stages.icoEnd
      EXP 			currentStage = Stages.icoEnd
      DUP2 			currentStage = Stages.icoEnd
      SLOAD 			currentStage = Stages.icoEnd
      DUP2 			currentStage = Stages.icoEnd
      PUSH FF			currentStage = Stages.icoEnd
      MUL 			currentStage = Stages.icoEnd
      NOT 			currentStage = Stages.icoEnd
      AND 			currentStage = Stages.icoEnd
      SWAP1 			currentStage = Stages.icoEnd
      DUP4 			currentStage = Stages.icoEnd
      PUSH 2			currentStage = Stages.icoEnd
      DUP2 			currentStage = Stages.icoEnd
      GT 			currentStage = Stages.icoEnd
      ISZERO 			currentStage = Stages.icoEnd
      PUSH [tag] 168			currentStage = Stages.icoEnd
      JUMPI 			currentStage = Stages.icoEnd
      INVALID 			currentStage = Stages.icoEnd
    tag 168			currentStage = Stages.icoEnd
      JUMPDEST 			currentStage = Stages.icoEnd
      MUL 			currentStage = Stages.icoEnd
      OR 			currentStage = Stages.icoEnd
      SWAP1 			currentStage = Stages.icoEnd
      SSTORE 			currentStage = Stages.icoEnd
      POP 			currentStage = Stages.icoEnd
      PUSH 0			0
      PUSH 4			remainingTokens
      SLOAD 			remainingTokens
      GT 			remainingTokens > 0
      ISZERO 			if(remainingTokens > 0)
\n    ...
      PUSH [tag] 169			if(remainingTokens > 0)
\n    ...
      JUMPI 			if(remainingTokens > 0)
\n    ...
      PUSH [tag] 170			balances[owner].add(remainingT...
      PUSH 4			remainingTokens
      SLOAD 			remainingTokens
      PUSH 0			balances
      DUP1 			balances[owner]
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      SWAP1 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      PUSH 0			balances[owner]
      KECCAK256 			balances[owner]
      SLOAD 			balances[owner]
      PUSH [tag] 34			balances[owner].add
      SWAP1 			balances[owner].add
      SWAP2 			balances[owner].add(remainingT...
      SWAP1 			balances[owner].add(remainingT...
      PUSH FFFFFFFF			balances[owner].add(remainingT...
      AND 			balances[owner].add(remainingT...
      JUMP [in]			balances[owner].add(remainingT...
    tag 170			balances[owner].add(remainingT...
      JUMPDEST 			balances[owner].add(remainingT...
      PUSH 0			balances
      DUP1 			balances[owner]
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      SWAP1 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      PUSH 0			balances[owner]
      KECCAK256 			balances[owner]
      DUP2 			balances[owner] = balances[own...
      SWAP1 			balances[owner] = balances[own...
      SSTORE 			balances[owner] = balances[own...
      POP 			balances[owner] = balances[own...
    tag 169			if(remainingTokens > 0)
\n    ...
      JUMPDEST 			if(remainingTokens > 0)
\n    ...
      PUSH 5			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner.transfer
      AND 			owner.transfer
      PUSH 8FC			owner.transfer(address(this).b...
      ADDRESS 			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address(this).balance
      AND 			address(this).balance
      BALANCE 			address(this).balance
      SWAP1 			owner.transfer(address(this).b...
      DUP2 			owner.transfer(address(this).b...
      ISZERO 			owner.transfer(address(this).b...
      MUL 			owner.transfer(address(this).b...
      SWAP1 			owner.transfer(address(this).b...
      PUSH 40			owner.transfer(address(this).b...
      MLOAD 			owner.transfer(address(this).b...
      PUSH 0			owner.transfer(address(this).b...
      PUSH 40			owner.transfer(address(this).b...
      MLOAD 			owner.transfer(address(this).b...
      DUP1 			owner.transfer(address(this).b...
      DUP4 			owner.transfer(address(this).b...
      SUB 			owner.transfer(address(this).b...
      DUP2 			owner.transfer(address(this).b...
      DUP6 			owner.transfer(address(this).b...
      DUP9 			owner.transfer(address(this).b...
      DUP9 			owner.transfer(address(this).b...
      CALL 			owner.transfer(address(this).b...
      SWAP4 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      ISZERO 			owner.transfer(address(this).b...
      DUP1 			olidity ^
      ISZERO 			a
      PUSH [tag] 171			a
      JUMPI 			a
      RETURNDATASIZE 			----------------
      PUSH 0			-
      DUP1 			-
      RETURNDATACOPY
\n
// ----------------------...
      RETURNDATASIZE 			----------------
      PUSH 0			-
      REVERT 			---------------------------
    tag 171			a
      JUMPDEST 			a
      POP 			owner.transfer(address(this).b...
      JUMP [out]			function endIco() internal {
\...
    .data
